name: 'Action'

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        shell: bash

    steps:
    - name: 'Checkout'
      uses: actions/checkout@v2

    - name: 'Setup Terraform'
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

    - name: 'Terraform Format'
      id: format
      run: terraform fmt -check
      working-directory: ./infra

    - name: 'Terraform Init'
      id: init
      run: terraform init -input=false
      working-directory: ./infra

    - name: 'Terraform Validate'
      id: validate
      run: terraform validate -no-color
      working-directory: ./infra

    - name: 'Terraform Plan'
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -input=false -no-color
      continue-on-error: true
      working-directory: ./infra

    - name: 'Update Pull Request'
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: 'Terraform Plan Status'
      if: steps.plan.outcome == 'failure'
      run: exit 1

      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -input=false -auto-approve
      working-directory: ./infra

  azurefunction:
    name: "Azure Function code"
    runs-on: ubuntu-latest
    environment: production

    env:
      AZURE_FUNCTIONAPP_NAME: fapp-plex-local-dl
      AZURE_FUNCTIONAPP_PACKAGE_PATH: './func'
      DOTNET_VERSION: '6.0.x'

    defaults:
      run:
        shell: bash

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: 'Setup DotNet ${{ env.DOTNET_VERSION }} Environment'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
